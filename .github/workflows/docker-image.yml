name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: 349206200747.dkr.ecr.us-west-2.amazonaws.com/portfolio-webapp/website
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::349206200747:role/Github-Push-to-ECR
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Create AWS credentials file for Docker secret
      run: |
        mkdir -p ${{ github.workspace }}/.aws
        echo "[default]" > ${{ github.workspace }}/.aws/credentials
        echo "aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" >> ${{ github.workspace }}/.aws/credentials
        echo "aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}" >> ${{ github.workspace }}/.aws/credentials
        echo "aws_session_token=${{ env.AWS_SESSION_TOKEN }}" >> ${{ github.workspace }}/.aws/credentials
        echo "region=${{ env.AWS_REGION }}" >> ${{ github.workspace }}/.aws/credentials
        
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
        tags: |
          type=sha,prefix=,suffix=,format=short
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push Docker image
      id: build-push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        secret-files: |
          aws=${{ github.workspace }}/.aws/credentials
